From 839f595a2edf7a51188d00772ee801e06393f300 Mon Sep 17 00:00:00 2001
From: ilovezfs <ilovezfs@icloud.com>
Date: Tue, 12 Jul 2016 10:09:51 -0700
Subject: [PATCH] protolude 0.1.6: fix ambiguous occurrences

Prevent PureScript build failure with protolude 0.1.6 due to
ambiguous occurrence errors arising from the following conflicts:

  Protolude.fromStrict vs. Data.ByteString.Lazy.fromStrict
  Protolude.decodeUtf8 vs. Data.Text.Lazy.Encoding.decodeUtf8
  Protolude.encodeUtf8 vs. Data.Text.Lazy.Encoding.encodeUtf8

In order to preserve the ability to use "fromStrict" without qualifying
it (e.g., Z.fromStrict), this fixes the ambiguous occurrences in a way
that is backwards incompatible with protolude 0.1.5. In particular,
using fromStrict without qualification requires hiding it, but since
protolude 0.1.5 doesn't actually export fromStrict, importing 0.1.5
hiding fromStrict will trigger a dodgy imports warning.

Bumping the protolude dependency to >= 0.1.6 requires bumps to
PureScript's designated Stack LTS and Nightly resolvers. Switching to
lts-6.7 and nightly-2016-07-11 requires a few unrelated fixes:

System.FilePath: remove redundant imports (-Wunused-imports)
parseURL: replace with non-deprecated parseRequest (-Wdeprecations)
fromJust: import from Data.Maybe instead of Unsafe (prevents error)

Also set protolude >=0.1.6 in purescript.cabal, and update the
CONTRIBUTORS file.
---
 CONTRIBUTORS.md                              | 1 +
 purescript.cabal                             | 6 +++---
 src/Language/PureScript/Ide/Command.hs       | 1 -
 src/Language/PureScript/Ide/Externs.hs       | 1 -
 src/Language/PureScript/Ide/Imports.hs       | 1 -
 src/Language/PureScript/Ide/Pursuit.hs       | 4 ++--
 src/Language/PureScript/Ide/Rebuild.hs       | 1 -
 src/Language/PureScript/Ide/SourceFile.hs    | 1 -
 src/Language/PureScript/Ide/State.hs         | 1 -
 src/Language/PureScript/Ide/Types.hs         | 1 -
 src/Language/PureScript/Ide/Util.hs          | 2 +-
 stack-ghc-8.0.yaml                           | 2 +-
 stack.yaml                                   | 2 +-
 tests/Language/PureScript/Ide/ImportsSpec.hs | 2 +-
 tests/Language/PureScript/Ide/Integration.hs | 2 +-
 15 files changed, 11 insertions(+), 17 deletions(-)

diff --git a/CONTRIBUTORS.md b/CONTRIBUTORS.md
index d6ec3ec..51c3506 100644
--- a/CONTRIBUTORS.md
+++ b/CONTRIBUTORS.md
@@ -27,6 +27,7 @@ This file lists the contributors to the PureScript compiler project, and the ter
 - [@faineance](https://github.com/faineance) My existing contributions and all future contributions until further notice are Copyright faineance, and are licensed to the owners and users of the PureScript compiler project under the terms of the [MIT license](http://opensource.org/licenses/MIT).
 - [@garyb](https://github.com/garyb) (Gary Burgess) My existing contributions and all future contributions until further notice are Copyright Gary Burgess, and are licensed to the owners and users of the PureScript compiler project under the terms of the [MIT license](http://opensource.org/licenses/MIT).
 - [@hdgarrood](https://github.com/hdgarrood) (Harry Garrood) My existing contributions and all future contributions until further notice are Copyright Harry Garrood, and are licensed to the owners and users of the PureScript compiler project under the terms of the [MIT license](http://opensource.org/licenses/MIT).
+- [@ilovezfs](https://github.com/ilovezfs) - My existing contributions and all future contributions until further notice are Copyright ilovezfs, and are licensed to the owners and users of the PureScript compiler project under the terms of the MIT license
 - [@izgzhen](https://github.com/izgzhen) (Zhen Zhang) My existing contributions and all future contributions until further notice are Copyright Zhen Zhang, and are licensed to the owners and users of the PureScript compiler project under the terms of the [MIT license](http://opensource.org/licenses/MIT).
 - [@jacereda](https://github.com/jacereda) (Jorge Acereda) My existing contributions and all future contributions until further notice are Copyright Jorge Acereda, and are licensed to the owners and users of the PureScript compiler project under the terms of the [MIT license](http://opensource.org/licenses/MIT).
 - [@japesinator](https://github.com/japesinator) (JP Smith) My existing contributions and all future contributions until further notice are Copyright JP Smith, and are licensed to the owners and users of the PureScript compiler project under the terms of the [MIT license](http://opensource.org/licenses/MIT).
diff --git a/purescript.cabal b/purescript.cabal
index 904a85b..656b836 100644
--- a/purescript.cabal
+++ b/purescript.cabal
@@ -128,7 +128,7 @@ library
                    pipes >= 4.0.0 && < 4.3.0,
                    pipes-http -any,
                    process >= 1.2.0 && < 1.5,
-                   protolude >= 0.1.5,
+                   protolude >= 0.1.6,
                    regex-tdfa -any,
                    safe >= 0.3.9 && < 0.4,
                    semigroups >= 0.16.2 && < 0.19,
@@ -449,7 +449,7 @@ executable psc-ide-server
                        mtl -any,
                        network -any,
                        optparse-applicative >= 0.12.1,
-                       protolude >= 0.1.5,
+                       protolude >= 0.1.6,
                        stm -any,
                        text -any,
                        transformers -any,
@@ -491,7 +491,7 @@ test-suite tests
                    optparse-applicative -any,
                    parsec -any,
                    process -any,
-                   protolude >= 0.1.5,
+                   protolude >= 0.1.6,
                    silently -any,
                    stm -any,
                    text -any,
diff --git a/src/Language/PureScript/Ide/Command.hs b/src/Language/PureScript/Ide/Command.hs
index 31a20a2..0d6e48c 100644
--- a/src/Language/PureScript/Ide/Command.hs
+++ b/src/Language/PureScript/Ide/Command.hs
@@ -24,7 +24,6 @@ import           Language.PureScript.Ide.CaseSplit
 import           Language.PureScript.Ide.Filter
 import           Language.PureScript.Ide.Matcher
 import           Language.PureScript.Ide.Types
-import           System.FilePath
 
 data Command
     = Load [P.ModuleName]
diff --git a/src/Language/PureScript/Ide/Externs.hs b/src/Language/PureScript/Ide/Externs.hs
index 37f0319..0e83745 100644
--- a/src/Language/PureScript/Ide/Externs.hs
+++ b/src/Language/PureScript/Ide/Externs.hs
@@ -33,7 +33,6 @@ import           Language.PureScript.Ide.Types
 import           Language.PureScript.Ide.Util
 
 import qualified Language.PureScript           as P
-import           System.FilePath
 
 readExternFile :: (MonadIO m, MonadError PscIdeError m) =>
                   FilePath -> m P.ExternsFile
diff --git a/src/Language/PureScript/Ide/Imports.hs b/src/Language/PureScript/Ide/Imports.hs
index e26796e..8c64aa1 100644
--- a/src/Language/PureScript/Ide/Imports.hs
+++ b/src/Language/PureScript/Ide/Imports.hs
@@ -40,7 +40,6 @@ import           Language.PureScript.Ide.Filter
 import           Language.PureScript.Ide.State
 import           Language.PureScript.Ide.Types
 import           Language.PureScript.Ide.Util
-import           System.FilePath
 
 data Import = Import P.ModuleName P.ImportDeclarationType  (Maybe P.ModuleName)
               deriving (Eq, Show)
diff --git a/src/Language/PureScript/Ide/Pursuit.hs b/src/Language/PureScript/Ide/Pursuit.hs
index 9032a34..962f573 100644
--- a/src/Language/PureScript/Ide/Pursuit.hs
+++ b/src/Language/PureScript/Ide/Pursuit.hs
@@ -19,7 +19,7 @@ module Language.PureScript.Ide.Pursuit
   , findPackagesForModuleIdent
   ) where
 
-import           Protolude
+import           Protolude                     hiding (fromStrict)
 
 import qualified Control.Exception             as E
 import           Data.Aeson
@@ -36,7 +36,7 @@ import qualified Pipes.Prelude                 as P
 queryPursuit :: Text -> IO ByteString
 queryPursuit q = do
   let qClean = T.dropWhileEnd (== '.') q
-  req' <- parseUrl "http://pursuit.purescript.org/search"
+  req' <- parseRequest "http://pursuit.purescript.org/search"
   let req = req'
         { queryString= "q=" <> (fromString . T.unpack) qClean
         , requestHeaders=[(hAccept, "application/json")]
diff --git a/src/Language/PureScript/Ide/Rebuild.hs b/src/Language/PureScript/Ide/Rebuild.hs
index 9dad7a6..f543dbb 100644
--- a/src/Language/PureScript/Ide/Rebuild.hs
+++ b/src/Language/PureScript/Ide/Rebuild.hs
@@ -22,7 +22,6 @@ import           Language.PureScript.Ide.State
 import           Language.PureScript.Ide.Types
 import           Language.PureScript.Ide.Util
 import           System.IO.UTF8                  (readUTF8File)
-import           System.FilePath
 
 -- | Given a filepath performs the following steps:
 --
diff --git a/src/Language/PureScript/Ide/SourceFile.hs b/src/Language/PureScript/Ide/SourceFile.hs
index 6e9ba0c..ccca612 100644
--- a/src/Language/PureScript/Ide/SourceFile.hs
+++ b/src/Language/PureScript/Ide/SourceFile.hs
@@ -26,7 +26,6 @@ import qualified Language.PureScript                  as P
 import           Language.PureScript.Ide.Error
 import           Language.PureScript.Ide.Util
 import           Language.PureScript.Ide.Types
-import           System.FilePath
 import           System.IO.UTF8                       (readUTF8File)
 
 parseModule
diff --git a/src/Language/PureScript/Ide/State.hs b/src/Language/PureScript/Ide/State.hs
index 4621d39..55b2255 100644
--- a/src/Language/PureScript/Ide/State.hs
+++ b/src/Language/PureScript/Ide/State.hs
@@ -44,7 +44,6 @@ import           Language.PureScript.Ide.Types
 import           Language.PureScript.Ide.Util
 import qualified Language.PureScript as P
 import           System.Clock
-import           System.FilePath
 
 -- | Resets all State inside psc-ide
 resetIdeState :: Ide m => m ()
diff --git a/src/Language/PureScript/Ide/Types.hs b/src/Language/PureScript/Ide/Types.hs
index 6bcfc7e..c8c3758 100644
--- a/src/Language/PureScript/Ide/Types.hs
+++ b/src/Language/PureScript/Ide/Types.hs
@@ -25,7 +25,6 @@ import           Data.Map.Lazy                        as M
 import qualified Language.PureScript.Errors.JSON      as P
 import qualified Language.PureScript as P
 import           Language.PureScript.Ide.Conversions
-import           System.FilePath
 import           Text.Parsec as Parsec
 import           Text.Parsec.Text
 
diff --git a/src/Language/PureScript/Ide/Util.hs b/src/Language/PureScript/Ide/Util.hs
index 4e4c235..548e1f4 100644
--- a/src/Language/PureScript/Ide/Util.hs
+++ b/src/Language/PureScript/Ide/Util.hs
@@ -27,7 +27,7 @@ module Language.PureScript.Ide.Util
   , module Language.PureScript.Ide.Conversions
   ) where
 
-import           Protolude
+import           Protolude                     hiding (decodeUtf8, encodeUtf8)
 import           Data.Aeson
 import qualified Data.Text                     as T
 import           Data.Text.Lazy.Encoding       (decodeUtf8, encodeUtf8)
diff --git a/stack.yaml b/stack.yaml
index 304ee4c..1990820 100644
--- a/stack.yaml
+++ b/stack.yaml
@@ -1,4 +1,4 @@
-resolver: lts-6.1
+resolver: lts-6.7
 packages:
 - '.'
 extra-deps: []
diff --git a/tests/Language/PureScript/Ide/ImportsSpec.hs b/tests/Language/PureScript/Ide/ImportsSpec.hs
index 5b5ba32..5680020 100644
--- a/tests/Language/PureScript/Ide/ImportsSpec.hs
+++ b/tests/Language/PureScript/Ide/ImportsSpec.hs
@@ -3,7 +3,7 @@
 module Language.PureScript.Ide.ImportsSpec where
 
 import           Protolude
-import           Unsafe                          (fromJust)
+import           Data.Maybe                      (fromJust)
 
 import qualified Language.PureScript             as P
 import           Language.PureScript.Ide.Imports
diff --git a/tests/Language/PureScript/Ide/Integration.hs b/tests/Language/PureScript/Ide/Integration.hs
index 4f55441..f733959 100644
--- a/tests/Language/PureScript/Ide/Integration.hs
+++ b/tests/Language/PureScript/Ide/Integration.hs
@@ -48,7 +48,7 @@ module Language.PureScript.Ide.Integration
        ) where
 
 import           Protolude
-import           Unsafe                       (fromJust)
+import           Data.Maybe                   (fromJust)
 
 import           Data.Aeson
 import           Data.Aeson.Types
