diff -Naur docky-2.1.4.orig/StandardPlugins/SessionManager/src/SessionActionsProvider.cs docky-2.1.4/StandardPlugins/SessionManager/src/SessionActionsProvider.cs
--- docky-2.1.4.orig/StandardPlugins/SessionManager/src/SessionActionsProvider.cs	2012-12-29 07:06:53.533296000 +0100
+++ docky-2.1.4/StandardPlugins/SessionManager/src/SessionActionsProvider.cs	2012-12-29 08:47:56.495696980 +0100
@@ -97,7 +97,7 @@
 			restartItem = new SessionManagerActionItem ("system-restart", Catalog.GetString ("_Restart..."), () => { 
 				SessionManagerActionItem.ShowConfirmationDialog (Catalog.GetString ("Restart"), 
 										Catalog.GetString ("Are you sure you want to close all programs and restart the computer?"), 
-										"system-restart", 
+										"system-shutdown", 
 										() => system_manager.Restart ());
 			});
 		
diff -Naur docky-2.1.4.orig/StandardPlugins/SessionManager/src/SystemManager.cs docky-2.1.4/StandardPlugins/SessionManager/src/SystemManager.cs
--- docky-2.1.4.orig/StandardPlugins/SessionManager/src/SystemManager.cs	2012-12-29 07:06:53.533296000 +0100
+++ docky-2.1.4/StandardPlugins/SessionManager/src/SystemManager.cs	2012-12-29 09:04:52.535669903 +0100
@@ -41,6 +41,10 @@
 		const string DeviceKitPowerPath = "/org/freedesktop/DeviceKit/Power";
 		const string DeviceKitPowerIface = "org.freedesktop.DeviceKit.Power";
 
+		const string SystemdName = "org.freedesktop.login1";
+		const string SystemdPath = "/org/freedesktop/login1";
+		const string SystemdIface = "org.freedesktop.login1.Manager";
+
 		const string ConsoleKitName = "org.freedesktop.ConsoleKit";
 		const string ConsoleKitPath = "/org/freedesktop/ConsoleKit/Manager";
 		const string ConsoleKitIface = "org.freedesktop.ConsoleKit.Manager";
@@ -79,6 +83,16 @@
 			event Action Changed;
 		}
 
+		[Interface (SystemdIface)]
+		interface ISystemd
+		{
+			string CanPowerOff ();
+			string CanReboot ();
+
+			void PowerOff (bool interactive);
+			void Reboot (bool interactive);
+		}
+
 		[Interface (ConsoleKitIface)]
 		interface IConsoleKit
 		{
@@ -100,6 +114,7 @@
 		
 		IDeviceKitPower devicekit;
 		IUPower upower;
+		ISystemd systemd;
 		IConsoleKit consolekit;
 		
 		private static SystemManager instance;
@@ -117,7 +132,7 @@
 				SystemBus = Bus.System.GetObject<IBus> ("org.freedesktop.DBus", new ObjectPath ("/org/freedesktop/DBus"));
 				
 				SystemBus.NameOwnerChanged += delegate(string name, string old_owner, string new_owner) {
-					if (name != UPowerName && name != DeviceKitPowerName && name != ConsoleKitName)
+					if (name != UPowerName && name != DeviceKitPowerName && name != SystemdName && name != ConsoleKitName)
 						return;
 
 					Log<SystemManager>.Debug ("DBus services changed, reconnecting now");
@@ -128,6 +143,9 @@
 					if (devicekit != null)
 						devicekit = null;
 
+					if (systemd != null)
+						systemd = null;
+
 					if (consolekit != null)
 						consolekit = null;
 					
@@ -161,7 +179,10 @@
 					Log<SystemManager>.Debug ("Using DeviceKit.Power dbus service");
 				}
 				
-				if (consolekit == null && Bus.System.NameHasOwner (ConsoleKitName)) {
+				if (systemd == null && Bus.System.NameHasOwner (SystemdName)) {
+					systemd = Bus.System.GetObject<ISystemd> (SystemdName, new ObjectPath (SystemdPath));
+					Log<SystemManager>.Debug ("Using login1.Manager dbus service");
+				} else if (consolekit == null && Bus.System.NameHasOwner (ConsoleKitName)) {
 					consolekit = Bus.System.GetObject<IConsoleKit> (ConsoleKitName, new ObjectPath (ConsoleKitPath));
 					Log<SystemManager>.Debug ("Using ConsoleKit.Manager dbus service");
 				}
@@ -261,39 +282,49 @@
 		
 		public bool CanRestart ()
 		{
-			if (consolekit != null)
+			if (systemd != null)
+				return systemd.CanReboot () == "yes";
+			else if (consolekit != null)
 				return consolekit.CanRestart ();
 			
-			Log<SystemManager>.Debug ("No consolekit bus available");
+			Log<SystemManager>.Debug ("No session bus available");
 			return false;
 		}
 
 		public void Restart ()
 		{
-			if (consolekit != null) {
+			if (systemd != null) {
+				if (systemd.CanReboot () == "yes")
+					systemd.Reboot (true);
+			} else if (consolekit != null) {
 				if (consolekit.CanRestart ())
 					consolekit.Restart ();
 			} else {
-				Log<SystemManager>.Debug ("No consolekit bus available");
+				Log<SystemManager>.Debug ("No session bus available");
 			}
 		}
 
 		public bool CanStop ()
 		{
-			if (consolekit != null)
+			if (systemd != null)
+				return systemd.CanPowerOff () == "yes";
+			else if (consolekit != null)
 				return consolekit.CanStop ();
 			
-			Log<SystemManager>.Debug ("No consolekit bus available");
+			Log<SystemManager>.Debug ("No session bus available");
 			return false;
 		}
 
 		public void Stop ()
 		{
-			if (consolekit != null) {
+			if (systemd != null) {
+				if (systemd.CanPowerOff () == "yes")
+					systemd.PowerOff (true);
+			} else if (consolekit != null) {
 				if (consolekit.CanStop ())
 					consolekit.Stop ();
 			} else {
-				Log<SystemManager>.Debug ("No consolekit bus available");
+				Log<SystemManager>.Debug ("No session bus available");
 			}
 		}
 		
@@ -309,12 +340,12 @@
 		
 		public bool CanLogOut ()
 		{
-			return DockServices.System.IsValidExecutable ("gnome-session-save");
+			return DockServices.System.IsValidExecutable ("gnome-session-quit");
 		}
 		
 		public void LogOut ()
 		{
-			DockServices.System.Execute ("gnome-session-save --logout");
+			DockServices.System.Execute ("gnome-session-quit --logout --no-prompt");
 		}
 		
 		public void Dispose ()
