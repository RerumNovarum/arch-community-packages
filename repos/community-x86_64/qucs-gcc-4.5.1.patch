diff -wbBur qucs-0.0.15.org/qucs-core/src/components/spfile.cpp qucs-0.0.15/qucs-core/src/components/spfile.cpp
--- qucs-0.0.15.org/qucs-core/src/components/spfile.cpp	2008-10-07 20:15:32.000000000 +0000
+++ qucs-0.0.15/qucs-core/src/components/spfile.cpp	2010-09-03 16:27:56.000000000 +0000
@@ -34,6 +34,8 @@
 #include "spline.h"
 #include "spfile.h"
 
+using namespace std;
+
 // Type of data and interpolators.
 #define DATA_RECTANGULAR 1
 #define DATA_POLAR       2
diff -wbBur qucs-0.0.15.org/qucs-core/src/evaluate.cpp qucs-0.0.15/qucs-core/src/evaluate.cpp
--- qucs-0.0.15.org/qucs-core/src/evaluate.cpp	2009-04-19 12:01:33.000000000 +0000
+++ qucs-0.0.15/qucs-core/src/evaluate.cpp	2010-09-03 16:36:30.000000000 +0000
@@ -1442,7 +1442,7 @@
 constant * evaluate::arcsin_c (constant * args) {
   _ARC0 (c1);
   _DEFC ();
-  _RETC (asin (*c1));
+  _RETC (tr1::asin (*c1));
 }
 
 constant * evaluate::arcsin_v (constant * args) {
@@ -1461,7 +1461,7 @@
 constant * evaluate::arccos_c (constant * args) {
   _ARC0 (c1);
   _DEFC ();
-  _RETC (acos (*c1));
+  _RETC (tr1::acos (*c1));
 }
 
 constant * evaluate::arccos_v (constant * args) {
@@ -1480,7 +1480,7 @@
 constant * evaluate::arctan_c (constant * args) {
   _ARC0 (c1);
   _DEFC ();
-  _RETC (atan (*c1));
+  _RETC (tr1::atan (*c1));
 }
 
 constant * evaluate::arctan_v (constant * args) {
@@ -1556,7 +1556,7 @@
 constant * evaluate::arcsec_c (constant * args) {
   _ARC0 (c1);
   _DEFC ();
-  _RETC (acos (1.0 / *c1));
+  _RETC (tr1::acos (1.0 / *c1));
 }
 
 constant * evaluate::arcsec_v (constant * args) {
@@ -1594,7 +1594,7 @@
 constant * evaluate::arccosec_c (constant * args) {
   _ARC0 (c1);
   _DEFC ();
-  _RETC (asin (1.0 / *c1));
+  _RETC (tr1::asin (1.0 / *c1));
 }
 
 constant * evaluate::arccosec_v (constant * args) {
@@ -1613,7 +1613,7 @@
 constant * evaluate::arsinh_c (constant * args) {
   _ARC0 (c1);
   _DEFC ();
-  _RETC (asinh (*c1));
+  _RETC (tr1::asinh (*c1));
 }
 
 constant * evaluate::arsinh_v (constant * args) {
@@ -1633,7 +1633,7 @@
 constant * evaluate::arcosech_c (constant * args) {
   _ARC0 (c1);
   _DEFC ();
-  _RETC (asinh (1.0 / *c1));
+  _RETC (tr1::asinh (1.0 / *c1));
 }
 
 constant * evaluate::arcosech_v (constant * args) {
@@ -1646,13 +1646,13 @@
 constant * evaluate::arcosh_d (constant * args) {
   _ARD0 (d1);
   _DEFC ();
-  _RETC (acosh (nr_complex_t (d1)));
+  _RETC (tr1::acosh (nr_complex_t (d1)));
 }
 
 constant * evaluate::arcosh_c (constant * args) {
   _ARC0 (c1);
   _DEFC ();
-  _RETC (acosh (*c1));
+  _RETC (tr1::acosh (*c1));
 }
 
 constant * evaluate::arcosh_v (constant * args) {
@@ -1690,7 +1690,7 @@
 constant * evaluate::artanh_c (constant * args) {
   _ARC0 (c1);
   _DEFC ();
-  _RETC (atanh (*c1));
+  _RETC (tr1::atanh (*c1));
 }
 
 constant * evaluate::artanh_v (constant * args) {
diff -wbBur qucs-0.0.15.org/qucs-core/src/math/complex.cpp qucs-0.0.15/qucs-core/src/math/complex.cpp
--- qucs-0.0.15.org/qucs-core/src/math/complex.cpp	2008-01-15 19:14:01.000000000 +0000
+++ qucs-0.0.15/qucs-core/src/math/complex.cpp	2010-09-03 16:32:48.000000000 +0000
@@ -366,7 +366,7 @@
    \return arc tangent of z
 */
 nr_complex_t atan2 (const nr_complex_t y, const nr_complex_t x) {
-  nr_complex_t a = atan (y / x);
+  nr_complex_t a = tr1::atan (y / x);
   return real (x) > 0.0 ? a : -a;
 }
 #endif
diff -wbBur qucs-0.0.15.org/qucs-core/src/math/complex.h qucs-0.0.15/qucs-core/src/math/complex.h
--- qucs-0.0.15.org/qucs-core/src/math/complex.h	2008-12-19 19:46:21.000000000 +0000
+++ qucs-0.0.15/qucs-core/src/math/complex.h	2010-09-03 16:28:21.000000000 +0000
@@ -25,6 +25,8 @@
 #ifndef __COMPLEX_H__
 #define __COMPLEX_H__
 
+#include "config.h"
+
 #include "real.h"
 
 #ifndef HAVE_COMPLEX
@@ -33,7 +35,7 @@
 #elif defined HAVE_TR1_COMPLEX
 #include <tr1/complex>
 using namespace std;
-using namespace std::tr1;
+//using namespace std::tr1;
 typedef std::complex<nr_double_t> nr_complex_t;
 #else
 #include <complex>
diff -wbBur qucs-0.0.15.org/qucs-core/src/vector.cpp qucs-0.0.15/qucs-core/src/vector.cpp
--- qucs-0.0.15.org/qucs-core/src/vector.cpp	2008-03-27 17:34:31.000000000 +0000
+++ qucs-0.0.15/qucs-core/src/vector.cpp	2010-09-03 16:34:24.000000000 +0000
@@ -450,13 +450,13 @@
 
 vector asin (vector v) {
   vector result (v);
-  for (int i = 0; i < v.getSize (); i++) result.set (asin (v.get (i)), i);
+  for (int i = 0; i < v.getSize (); i++) result.set (tr1::asin (v.get (i)), i);
   return result;
 }
 
 vector acos (vector v) {
   vector result (v);
-  for (int i = 0; i < v.getSize (); i++) result.set (acos (v.get (i)), i);
+  for (int i = 0; i < v.getSize (); i++) result.set (tr1::acos (v.get (i)), i);
   return result;
 }
 
@@ -474,7 +474,7 @@
 
 vector atan (vector v) {
   vector result (v);
-  for (int i = 0; i < v.getSize (); i++) result.set (atan (v.get (i)), i);
+  for (int i = 0; i < v.getSize (); i++) result.set (tr1::atan (v.get (i)), i);
   return result;
 }
 
@@ -498,7 +498,7 @@
 
 vector asinh (vector v) {
   vector result (v);
-  for (int i = 0; i < v.getSize (); i++) result.set (asinh (v.get (i)), i);
+  for (int i = 0; i < v.getSize (); i++) result.set (tr1::asinh (v.get (i)), i);
   return result;
 }
 
@@ -510,7 +510,7 @@
 
 vector acosh (vector v) {
   vector result (v);
-  for (int i = 0; i < v.getSize (); i++) result.set (acosh (v.get (i)), i);
+  for (int i = 0; i < v.getSize (); i++) result.set (tr1::acosh (v.get (i)), i);
   return result;
 }
 
@@ -528,7 +528,7 @@
 
 vector atanh (vector v) {
   vector result (v);
-  for (int i = 0; i < v.getSize (); i++) result.set (atanh (v.get (i)), i);
+  for (int i = 0; i < v.getSize (); i++) result.set (tr1::atanh (v.get (i)), i);
   return result;
 }
 
